@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager

@model IEnumerable<MissingPeopleRegistry.ViewModels.MissingPeople.MissingPersonVM>

@{
    ViewData["Title"] = "Strona główna";
}

<div class="offset-md-2 col-md-8">
    <div class="header-text row-space text-center">
        Lista osób zaginionych
    </div>
    @if (Model == null || !Model.Any())
    {
        <div>
            Lista osób zaginionych jest pusta!
        </div>
    }
    else
    {
        <div class="row">
            <div>Filtruj</div>
            <div class="col-md-2">
                <select class="form-control" onchange="filter(this)">
                    <option value="Wszyscy">Wszyscy</option>
                    <option value="Mężczyzna">Mężczyzna</option>
                    <option value="Kobieta">Kobieta</option>
                </select>
            </div>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        Imię
                    </th>
                    <th>
                        Nazwisko
                    </th>
                    <th>
                        Wiek
                    </th>
                    <th>
                        Płeć
                    </th>
                    <th>
                        Data zagnięcia
                    </th>
                    <th>
                        Miasto
                    </th>
                    <th>
                        Kraj
                    </th>
                </tr>
            </thead>
            <tbody id="list">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.Name
                        </td>
                        <td>
                            @item.LastName
                        </td>
                        <td>
                            @item.Age
                        </td>
                        <td>
                            <span>@item.Gender</span>
                        </td>
                        <td>
                            @item.MissingDate.ToString("dd.MM.yyyy")
                        </td>
                        <td>
                            @item.City
                        </td>
                        <td>
                            @item.Country
                        </td>
                        <td>
                            @Html.ActionLink("Wyświetl", "GetMissingPerson", "MissingPeople", new { id = item.Id }, new { @class = "btn btn-primary" })
                            @if (User.IsInRole(nameof(Role.Admin)))
                            {
                                @Html.ActionLink("Edytuj", "UpdateMissingPerson", "MissingPeople", new { id = item.Id }, new { @class = "btn btn-primary space-right" })
                                @Html.ActionLink("Usuń", "DeleteMissingPerson", "MissingPeople", new { id = item.Id }, new { @class = "btn btn-danger" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        function filter(gender) {
            var genderValue = gender.value;
            const list = document.getElementById('list');
            var items = [...list.children];
            items.forEach(x => {
                if (genderValue === "Wszyscy") {
                    x.style.display = "table-row";
                }
                else if (x.getElementsByTagName('span')[0].innerHTML == genderValue) {
                    x.style.display = "table-row";
                }
                else {
                    x.style.display = "none";
                }
            });
        }
    </script>
 }